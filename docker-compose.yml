version: "3"
services:
  postgres:
    image: library/postgres:13
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgres/:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 15s
      timeout: 15s
      retries: 2

  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - .env
    ports:
      - ${PGADMIN_OUT_PORT}:80
    restart: always
    volumes:
      - pgadmin:/root/.pgadmin

  ticket-service:
    build:
      dockerfile: ./src/TicketServices/Dockerfile
    image: jokerva1010123/ticket-service
    container_name: "ticketservice"
    depends_on:
      - postgres
    ports:
      - "8050:8080"
        
  privilege-service:
    build:
      context: .
      dockerfile: ./src/BonusServices/Dockerfile
    image: jokerva1010123/bonus-service
    container_name: "privilegeservice"
    depends_on:
      - "postgres"
    restart: always
    ports:
      - "8060:8080"

  flight-service:
    build:
      context: .
      dockerfile: ./src/FlightServices/Dockerfile
    image: jokerva1010123/flight-service
    container_name: "flightservice"
    depends_on:
      - "postgres"
    restart: always
    ports:
      - "8070:8080"

  gateway:
    build:
      context: .
      dockerfile: ./src/Gateway/Dockerfile
    image: jokerva1010123/gateway
    restart: always
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development


volumes:
  db-data:
  pgadmin: